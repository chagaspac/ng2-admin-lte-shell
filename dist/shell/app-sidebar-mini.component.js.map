{"version":3,"file":"app-sidebar-mini.component.js","sourceRoot":"","sources":["file:///c:/Dev/git/ng2-admin-lte-shell/tmp/broccoli_type_script_compiler-input_base_path-bj8Bljfj.tmp/0/src/shell/app-sidebar-mini.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAkE,eAAe,CAAC,CAAA;AAClF,sBAA2B,aAAa,CAAC,CAAA;AACzC,kCAAyC,yBAAyB,CAAC,CAAA;AACnE,2BAA2B,iBAAiB,CAAC,CAAA;AAC7C,QAAO,uBAAuB,CAAC,CAAA;AAC/B,QAAO,wCAAwC,CAAC,CAAA;AAEhD,4BAA0C,eAAe,CAAC,CAAA;AAE1D,IAAM,mBAAmB,GAAQ,EAAE,cAAc,EAAE,IAAI,EAAE,kBAAkB,EAAE,KAAK,GAAG,CAAC;AACtF,IAAM,oBAAoB,GAAQ,EAAE,cAAc,EAAE,KAAK,EAAE,kBAAkB,EAAE,IAAI,GAAG,CAAC;AAEvF,IAAM,0BAA0B,GAAQ,EAAE,sBAAsB,EAAE,IAAI,EAAE,CAAC;AACzE,IAAM,2BAA2B,GAAQ,EAAE,sBAAsB,EAAE,KAAK,EAAE,CAAC;AAU3E;IASE,iCAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAAI,CAAC;IAE/C,0CAAQ,GAAR;QACE,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,KAAK;aACjC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,gBAAgB,GAAG,mBAAmB,GAAG,oBAAoB,EAA/D,CAA+D,CAAC;aACzE,oBAAoB,EAAE,CAAC;QAE1B,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,KAAK;aACpC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,uBAAuB,GAAG,0BAA0B,GAAG,2BAA2B,EAApF,CAAoF,CAAC;aAC9F,oBAAoB,EAAE,CAAC;QAE1B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK;aAC3B,GAAG,CAAC,UAAA,CAAC,IAAI,OAAK,EAAE,YAAY,EAAG,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,IAAI,EAAE,EAApD,CAAoD,CAAC;aAC9D,oBAAoB,EAAE,CAAC;QAE1B,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,KAAK;aAClC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAK,EAAE,YAAY,EAAG,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,IAAI,EAAE,EAA9D,CAA8D,CAAC;aACxE,oBAAoB,EAAE,CAAC;IAC5B,CAAC;IAED,kDAAgB,GAAhB,cAAqB,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,6BAAe,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC,CAAC;IAEpF,yDAAuB,GAAvB,cAA4B,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,6BAAe,CAAC,uBAAuB,EAAE,CAAC,CAAC,CAAC,CAAC;IAElG,gDAAc,GAAd,cAAmB,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,6BAAe,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC,CAAC;IA/BhF;QAAC,YAAK,EAAE;;0DAAA;IAVV;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,kBAAkB;YAC5B,WAAW,EAAE,iCAAiC;YAC9C,UAAU,EAAE,CAAE,4CAAwB,CAAE;YACxC,eAAe,EAAE,8BAAuB,CAAC,MAAM;YAC/C,MAAM,EAAE,EAAE;SACX,CAAC;;+BAAA;IAmCF,8BAAC;AAAD,CAAC,AAlCD,IAkCC;AAlCY,+BAAuB,0BAkCnC,CAAA","sourcesContent":["import { Component, Input, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\nimport { Dispatcher } from '@ngrx/store';\r\nimport { StoreLogMonitorComponent } from '@ngrx/store-log-monitor';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/distinctUntilChanged';\r\n\r\nimport { AppShell, AppShellActions } from './shell.redux';\r\n\r\nconst opendSidebarClasses: any = { 'sidebar-open': true, 'sidebar-collapse': false, };\r\nconst closedSidebarClasses: any = { 'sidebar-open': false, 'sidebar-collapse': true, };\r\n\r\nconst opendControlSidebarClasses: any = { 'control-sidebar-open': true };\r\nconst closedControlSidebarClasses: any = { 'control-sidebar-open': false };\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'app-sidebar-mini',\r\n  templateUrl: 'app-sidebar-mini.component.html',\r\n  directives: [ StoreLogMonitorComponent ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  styles: [],\r\n})\r\nexport class AppSidebarMiniComponent implements OnInit {\r\n\r\n  @Input() state: Observable<AppShell>;\r\n\r\n  sidebarMiniClasses: Observable<any>;\r\n  controlSidebarClasses: Observable<any>;\r\n  wrapperStyle: Observable<any>;\r\n  contentWrapperStyle: Observable<any>;\r\n\r\n  constructor(private dispatcher: Dispatcher) { }\r\n\r\n  ngOnInit() {\r\n    this.sidebarMiniClasses = this.state\r\n      .map(s => s.isNavigationOpen ? opendSidebarClasses : closedSidebarClasses)\r\n      .distinctUntilChanged();\r\n\r\n    this.controlSidebarClasses = this.state\r\n      .map(s => s.isControlNavigationOpen ? opendControlSidebarClasses : closedControlSidebarClasses)\r\n      .distinctUntilChanged();\r\n\r\n    this.wrapperStyle = this.state\r\n      .map(s => <any>{ 'min-height':  (s.windowSize.height) + 'px' })\r\n      .distinctUntilChanged();\r\n\r\n    this.contentWrapperStyle = this.state\r\n      .map(s => <any>{ 'min-height':  (s.windowSize.height - 50 - 51) + 'px' })\r\n      .distinctUntilChanged();\r\n  }\r\n\r\n  toggleNavigation() { this.dispatcher.dispatch(AppShellActions.toggleNavigation()); }\r\n\r\n  toggleControlNavigation() { this.dispatcher.dispatch(AppShellActions.toggleControlNavigation()); }\r\n\r\n  toggleDevTools() { this.dispatcher.dispatch(AppShellActions.toggleDevTools()); }\r\n}\r\n"]}