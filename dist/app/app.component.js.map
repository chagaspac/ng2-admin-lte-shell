{"version":3,"file":"app.component.js","sourceRoot":"","sources":["file:///c:/Dev/git/ng2-admin-lte-shell/tmp/broccoli_type_script_compiler-input_base_path-bj8Bljfj.tmp/0/src/app/app.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAgD,eAAe,CAAC,CAAA;AAChE,sBAAkC,aAAa,CAAC,CAAA;AAChD,kCAAyC,yBAAyB,CAAC,CAAA;AAInE,4BAA0C,sBAAsB,CAAC,CAAA;AACjE,2CAAwC,qCAAqC,CAAC,CAAA;AAS9E;IAGE,sBACU,KAAsB,EACtB,UAAsB;QADtB,UAAK,GAAL,KAAK,CAAiB;QACtB,eAAU,GAAV,UAAU,CAAY;QAE9B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,QAAQ,EAAV,CAAU,CAAC,CAAC;IAChD,CAAC;IAED,+BAAQ,GAAR;QACE,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,6BAAe,CAAC,aAAa,CAAC,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC;IACjG,CAAC;IAGD,oCAAa,GAAb,UAAc,MAAM;QAClB,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,6BAAe,CAAC,aAAa,CAAC,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC;IACjG,CAAC;IAHD;QAAC,mBAAY,CAAC,eAAe,EAAE,CAAC,QAAQ,CAAC,CAAC;;;;qDAAA;IArB5C;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,UAAU;YACpB,WAAW,EAAE,oBAAoB;YACjC,SAAS,EAAE,CAAC,mBAAmB,CAAC;YAChC,UAAU,EAAE,CAAE,oDAAuB,EAAE,4CAAwB,CAAE;SAClE,CAAC;;oBAAA;IAmBF,mBAAC;AAAD,CAAC,AAlBD,IAkBC;AAlBY,oBAAY,eAkBxB,CAAA","sourcesContent":["import { Component, OnInit, HostListener } from '@angular/core';\nimport { Store, Dispatcher } from '@ngrx/store';\nimport { StoreLogMonitorComponent } from '@ngrx/store-log-monitor';\nimport { Observable } from 'rxjs/Observable';\n\nimport { AppState } from './app.redux';\nimport { AppShell, AppShellActions } from '../shell/shell.redux';\nimport { AppSidebarMiniComponent } from '../shell/app-sidebar-mini.component';\n\n@Component({\n  moduleId: module.id,\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.css'],\n  directives: [ AppSidebarMiniComponent, StoreLogMonitorComponent ]\n})\nexport class AppComponent implements OnInit {\n  appShell: Observable<AppShell>;\n\n  constructor(\n    private store: Store<AppState>,\n    private dispatcher: Dispatcher\n  ) {\n    this.appShell = store.select(s => s.appShell);\n  }\n\n  ngOnInit() {\n    this.dispatcher.dispatch(AppShellActions.setWindowSize(window.innerWidth, window.innerHeight));\n  }\n\n  @HostListener('window:resize', ['$event'])\n  _windowResize($event) {\n    this.dispatcher.dispatch(AppShellActions.setWindowSize(window.innerWidth, window.innerHeight));\n  }\n}"]}